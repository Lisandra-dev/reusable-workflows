name: Publish
on:
  workflow_call:
    inputs:
      PLUGIN_NAME:
        description: "id of your plugin"
        required: true
        type: string
      STYLE:
        description: "If you use a styles.css file, set this to true"
        required: false
        type: boolean
        default: false
      BETA:
        description: "Publish a beta release ?"
        required: false
        type: boolean
        default: false
      SUBMODULE:
        description: "If your plugin is a submodule, set this to true"
        required: false
        type: boolean
        default: false
      CACHE:
        description: "Cache to use (npm, pnpm, yarn)"
        required: false
        type: string
        default: "npm"
    secrets:
      GH_TOKEN:
        description: "Github token"
        required: true

jobs:
  echo-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Echo inputs
        run: |
          echo "## Inputs" >> $GITHUB_STEP_SUMMARY
          echo "PLUGIN_NAME: ${{ inputs.PLUGIN_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "STYLE: ${{ inputs.STYLE }}" >> $GITHUB_STEP_SUMMARY
          echo "BETA: ${{ inputs.BETA }}" >> $GITHUB_STEP_SUMMARY
          echo "SUBMODULE: ${{ inputs.SUBMODULE }}" >> $GITHUB_STEP_SUMMARY
          echo "CACHE: ${{ inputs.CACHE }}" >> $GITHUB_STEP_SUMMARY
  release:
    runs-on: ubuntu-latest
    env:
      SUBMODULE: ${{ inputs.SUBMODULE }}
      VERSION: ""
    steps:
      - name: verify inputs
        if: ${{ inputs.CACHE != 'npm' && inputs.CACHE != 'pnpm' && inputs.CACHE != 'yarn' }}
        run: |
          echo "::error::CACHE must be one of npm, pnpm or yarn"
          exit 1
      - name: Set to recursive
        if: ${{ inputs.SUBMODULE }}
        run: |
          echo "SUBMODULE=recursive" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: ${{ env.SUBMODULE }}
          token: ${{ secrets.GH_TOKEN }}
      - name: Install PNPM
        if: ${{ inputs.CACHE == 'pnpm'}}
        uses: pnpm/action-setup@v3
        with:
          version: 9
      - name: Install Yarn
        if: ${{ inputs.CACHE == 'yarn'}}
        run: npm install -g yarn

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: ${{ inputs.cache }}
      - name: Build (npm)
        if: ${{ inputs.CACHE == 'npm'}}
        run: |
          npm install
          npm run build  -- --output-dir ${{ inputs.PLUGIN_NAME }}
      - name: Build (yarn)
        if: ${{ inputs.CACHE == 'yarn'}}
        run: |
          yarn install
          yarn run build  -- --output-dir ${{ inputs.PLUGIN_NAME }}
      - name: build (pnpm)
        if: ${{ inputs.CACHE == 'pnpm'}}
        run: |
          pnpm install
          pnpm run build --output-dir ${{ inputs.PLUGIN_NAME }}
      - name: Get version
        id: tags
        run: |
          echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
          echo ${{ env.VERSION }}
          echo "## Release ${{ env.VERSION }}" >> $GITHUB_STEP_SUMMARY
      - name: Create zip
        run: |
          zip -r ${{ inputs.PLUGIN_NAME }}.zip ${{ inputs.PLUGIN_NAME }}
          echo "### Files" >> $GITHUB_STEP_SUMMARY
          ls >> $GITHUB_STEP_SUMMARY
      - name: Delete release if workflow dispatch
        if: ${{ github.event_name == 'workflow_dispatch' && !env.ACT }}
        continue-on-error: true
        run: gh release delete ${{ env.VERSION }} -R ${{ github.repository }} -y
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Create changelog
        if: ${{ !inputs.BETA || !contains(env.VERSION, '-') }}
        run: |
          npx rexreplace "^.*?#+\s\[.*?\n.*?(?=\s*#+\s\[)" "_" -s -M -G -m -o "CHANGELOG.md" > CHANGELOG-LATEST.md
          cat CHANGELOG-LATEST.md >> $GITHUB_STEP_SUMMARY
      - name: Create beta changelog
        if: ${{ inputs.BETA || contains(env.VERSION, '-') }}
        run: |
          npx rexreplace "^.*?#+\s\[.*?\n.*?(?=\s*#+\s\[)" "_" -s -M -G -m -o "CHANGELOG-beta.md" > CHANGELOG-LATEST.md
          cat CHANGELOG-LATEST.md >> $GITHUB_STEP_SUMMARY
      - name: Create Release with css
        if: ${{ inputs.STYLE && !env.ACT}}
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GH_TOKEN }}"
          VERSION: "${{ env.VERSION }}"
        with:
          tag_name: "${{ env.VERSION }}"
          name: "${{ env.VERSION }}"
          body_path: CHANGELOG-LATEST.md
          draft: false
          prerelease: ${{ inputs.BETA }}
          token: "${{ secrets.GH_TOKEN }}"
          files: |
            ${{ inputs.PLUGIN_NAME }}.zip
            ${{ inputs.PLUGIN_NAME }}/main.js
            ${{ inputs.PLUGIN_NAME }}/manifest.json
            ${{ inputs.PLUGIN_NAME }}/styles.css
      - name: Create Release without css
        if: ${{ !inputs.STYLE && !env.ACT}}
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GH_TOKEN }}"
          VERSION: "${{ env.VERSION }}"
        with:
          tag_name: "${{ env.VERSION }}"
          name: "${{ env.VERSION }}"
          body_path: CHANGELOG-LATEST.md
          draft: false
          prerelease: ${{ inputs.BETA }}
          token: "${{ secrets.GH_TOKEN }}"
          files: |
            ${{ inputs.PLUGIN_NAME }}.zip
            ${{ inputs.PLUGIN_NAME }}/main.js
            ${{ inputs.PLUGIN_NAME }}/manifest.json
