name: Bump and release version
on: 
  workflow_call:
    inputs:
      PLUGIN_NAME:
        description: "id of your plugin"
        required: true
        type: string
      STYLE:
        description: "If you use a styles.css file, set this to true"
        required: false
        type: boolean
        default: false
      BRANCH:
        description: "Main branch"
        type: string
        required: false
        default: "master"
      BETA:
        description: "If you want to release a beta version, set this to true"
        required: false
        type: boolean
        default: false
    secrets:
      GH_TOKEN:
        description: "Github token"
        required: true
      AUTHOR_EMAIL:
        description: "Author email"
        required: false
      AUTHOR_NAME:
        description: "Author name"
        required: false

jobs:
  echo:
    runs-on: ubuntu-latest
    steps:
    - name: Echo
      run: |
        echo "### Inputs" >> $GITHUB_STEP_SUMMARY
        echo "PLUGIN_NAME: ${{ inputs.PLUGIN_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "STYLE: ${{ inputs.STYLE }}" >> $GITHUB_STEP_SUMMARY
        echo "BRANCH: ${{ inputs.BRANCH }}" >> $GITHUB_STEP_SUMMARY
        echo "BETA: ${{ inputs.BETA }}" >> $GITHUB_STEP_SUMMARY

  release-latest:
    if: ${{ !inputs.BETA }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm install
      - name: Bump version
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          npm run bump --ignore-scripts
      - name: Get version number
        run: |
          echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
          echo "### VERSION : ${{ env.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo ${{ env.VERSION }}
      - name: build
        run: npm run build  -- --output-dir ${{ inputs.PLUGIN_NAME }}
      - name: Zip files
        run: |
          zip -r ${{ inputs.PLUGIN_NAME }}.zip ${{ inputs.PLUGIN_NAME }}
          echo "### Files" >> $GITHUB_STEP_SUMMARY
          ls >> $GITHUB_STEP_SUMMARY
      - name: Create changelog
        run: |
          npx rexreplace "^.*?#+\s\[.*?\n.*?(?=\s*#+\s\[)" "_" -s -M -G -m -o "CHANGELOG.md" > CHANGELOG-LATEST.md
          cat CHANGELOG-LATEST.md >> $GITHUB_STEP_SUMMARY
      - name: Create Release with css
        if: ${{ inputs.STYLE && !env.ACT }}
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GH_TOKEN }}"
          VERSION: "${{ env.VERSION }}"
        with:
          tag_name: "${{ env.VERSION }}"
          name: "${{ env.VERSION }}"
          body_path: CHANGELOG-LATEST.md
          draft: false
          prerelease: false
          token: "${{ secrets.GH_TOKEN }}"
          files: |
            ${{ inputs.PLUGIN_NAME }}.zip
            ${{ inputs.PLUGIN_NAME }}/main.js
            ${{ inputs.PLUGIN_NAME }}/manifest.json
            ${{ inputs.PLUGIN_NAME }}/styles.css
      - name: Create Release without css
        if: ${{ !inputs.STYLE && !env.ACT }}
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GH_TOKEN }}"
          VERSION: "${{ env.VERSION }}"
        with:
          tag_name: "${{ env.VERSION }}"
          name: "${{ env.VERSION }}"
          body_path: CHANGELOG-LATEST.md
          draft: false
          prerelease: false
          token: "${{ secrets.GH_TOKEN }}"
          files: |
            ${{ inputs.PLUGIN_NAME }}.zip
            ${{ inputs.PLUGIN_NAME }}/main.js
            ${{ inputs.PLUGIN_NAME }}/manifest.json
      - name: Push updated changes
        run: git push --follow-tags origin ${{ inputs.BRANCH }}
  release-beta:
    if: ${{ inputs.BETA }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm install
      - name: Bump version beta
        run: |
          npm run bump --ignore-scripts -- --beta
      - name: Get version number
        run: |
          echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
          echo "### VERSION : ${{ env.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo ${{ env.VERSION }}
      - name: build
        run: npm run build  -- --output-dir ${{ inputs.PLUGIN_NAME }}
      - name: Zip files
        run: |
          zip -r ${{ inputs.PLUGIN_NAME }}.zip ${{ inputs.PLUGIN_NAME }}
          echo "### Files" >> $GITHUB_STEP_SUMMARY
          ls >> $GITHUB_STEP_SUMMARY
      - name: Create changelog
        run: |
          npx rexreplace "^.*?#+\s\[.*?\n.*?(?=\s*#+\s\[)" "_" -s -M -G -m -o "CHANGELOG-beta.md" > CHANGELOG-LATEST.md
          cat CHANGELOG-LATEST.md >> $GITHUB_STEP_SUMMARY
      - name: Create Release with css
        if: ${{ inputs.STYLE && !env.ACT }}
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GH_TOKEN }}"
          VERSION: "${{ env.VERSION }}"
        with:
          tag_name: "${{ env.VERSION }}"
          name: "${{ env.VERSION }}"
          body_path: CHANGELOG-LATEST.md
          draft: false
          prerelease: false
          token: "${{ secrets.GH_TOKEN }}"
          files: |
            ${{ inputs.PLUGIN_NAME }}.zip
            ${{ inputs.PLUGIN_NAME }}/main.js
            ${{ inputs.PLUGIN_NAME }}/manifest.json
            ${{ inputs.PLUGIN_NAME }}/styles.css
      - name: Create Release without css
        if: ${{ !inputs.STYLE && !env.ACT }}
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GH_TOKEN }}"
          VERSION: "${{ env.VERSION }}"
        with:
          tag_name: "${{ env.VERSION }}"
          name: "${{ env.VERSION }}"
          body_path: CHANGELOG-LATEST.md
          draft: false
          prerelease: false
          token: "${{ secrets.GH_TOKEN }}"
          files: |
            ${{ inputs.PLUGIN_NAME }}.zip
            ${{ inputs.PLUGIN_NAME }}/main.js
            ${{ inputs.PLUGIN_NAME }}/manifest.json
      - name: Push updated changes
        if: ${{ !env.ACT }}
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          branch: ${{ inputs.BRANCH || 'master' }}
          author_name: ${{ secrets.AUTHOR_NAME || 'github-actions[bot]' }}
          author_email: ${{ secrets.AUTHOR_EMAIL || 'github-actions[bot]@users.noreply.github.com' }}
          


      